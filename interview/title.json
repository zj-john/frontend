{
    "title": [
        {
            "id": 1,
            "name": "call和apply的区别，哪个性能好一点",
            "answer": "call的性能好一点（参数>3时），apply->[], call-> str"
        },
        {
            "id": 2,
            "name": "(5).add(3).minus(2) => 6"
        },
        {
            "id": 3,
            "name": "箭头函数和普通函数的区别，箭头函数可否通过new生成实例",
            "answer": "1.箭头函数没有this 2.箭头函数没有argument参数 3.箭头函数没有构造函数（prototype属性）。所以不能通过new生成实例"
        },
        {
            "id": 4,
            "name": "AbcD => aBCd"
        },
        {
            "id": 5,
            "name": "字符串匹配算法,字符串S中是否存在字符串T（不用indexOf，includes）"
        },
        {
            "id": 6,
            "name": "网址匹配的正则"
        },
        {
            "id": 7,
            "name": "图片懒加载"
        },
        {
            "id": 8,
            "name": "正则：一个6-16位字符串，必须同时包含大小写字母和数字"
        },
        {
            "id": 9,
            "name": "实现attr(name, value)函数，列出所有属性为name，值为value的元素集合"
        },
        {
            "id": 10,
            "name": "英文字母/汉字组成的字符串，给英文单词前后加空格"
        },
        {
            "id": 11,
            "name": "[1,2,[3,4],5,6,1,[1,2,[9,0]]] 数组扁平化"
        },
        {
            "id": 12,
            "name": "实现new函数"
        },
        {
            "id": 13,
            "name": "数组合并"
        },
        {
            "id": 14,
            "name": "dom操作，插入大量节点，并绑定事件"
        },
        {
            "id": 15,
            "name": "生成dom tree，深度、广度遍历节点"
        },
        {
            "id": 16,
            "name": "排序算法"
        },
        {
            "id": 17,
            "name": "数组旋转"
        },
        {
            "id": 18,
            "name": "闭包应用，传值"
        },
        {
            "id": 19,
            "name": "if(a==1 && a ==2 && a==3) { console.log(\"ok\")}"
        },
        {
            "id": 20,
            "name": "科里化"
        },
        {
            "id": 21,
            "name": "css"
        },
        {
            "id": 22,
            "name": "deepcopy"
        },
        {
            "id": 23,
            "name": "字符串中最长不重复子串的长度： abcabcedfae  abcedf"
        },
        {
            "id": 24,
            "name": "promise.all"
        },
        {
            "id": 25,
            "name": "数组中最长升序长度：[10,4,3,4,203,6,8] => [3,4,6,8]"
        },
        {
            "id": 26,
            "name": "节流、防抖"
        },
        {
            "id": 27,
            "name": "https"
        },
        {
            "id": 28,
            "name": "数组合并：let arr1 = ['A1', 'A2', 'B1', 'B2'] ; let arr2 = ['A', 'B'] => ['A1', 'A2', 'A', 'B1', 'B2', 'B'] ;"
        },
        {
            "id": 29,
            "name": "let obj = {2:3,3:4,length:2, push:Array.prototype.push} obj.push(1) obj.push(2) console.log(obj);",
            "answer": "结果：{2: 1, 3: 2, length: 4, push: ƒ}。 push的实现方式 this[this.length] = value,所以会根据当前length选择赋值对象。push的返回值是新的length值"
        },
        {
            "id": 30,
            "name": "{1:22,2:33,5:88} => [22,33,null,null,88,null,null,null,null,null,null,null]"
        },
        {
            "id": 31,
            "name": "let nums1 = [1,2,2,1]; let nums = [2,3] => [2,2]"
        }
    ]
}